name: Release Build

on:
  workflow_dispatch:
    inputs:
      message:
        description: 'Release 描述'
        required: false
        default: 'Auto-generated OpenWRT build release'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Main, Bypass]

    name: Build OpenWRT ${{ matrix.build_type }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4
      with:
        ref: dev

    - name: Install build dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential clang flex bison g++ gawk gcc-multilib g++-multilib \
          gettext git libncurses5-dev libssl-dev python3-setuptools \
          rsync swig unzip zlib1g-dev file wget

    - name: Free up disk space
      run: |
        echo "$(nproc)"
        echo "📦 清理磁盘空间以确保有足够的构建空间"
        df -h
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo apt clean
        df -h

    - name: Update feeds
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Install themes & tools
      run: |
          ./ci/scripts/luci-theme-argon.sh
  
    - name: Install luci-app-openclash
      if: matrix.build_type == 'Bypass'
      run: |
        ./ci/scripts/luci-app-openclash.sh

    - name: Build OpenWRT ${{ matrix.build_type }}
      run: |
        BUILD_TYPE="${{ matrix.build_type }}"
        CONFIG_FILE="ci/config/${BUILD_TYPE,,}"
        echo "⚙️ 使用配置文件: $CONFIG_FILE"
        cp "$CONFIG_FILE" .config
        make defconfig
        make download -j"$(nproc)" || make download -j1 V=s
        make -j"$(nproc)" || make -j1 V=s

    - name: Archive build output
      run: |
        ZIP_NAME="openwrt-${{ matrix.build_type }}-${{ github.run_number }}.zip"
        FILE_PATH=$(find bin/targets/x86/64 -name "openwrt-x86-64-generic-squashfs-combined-efi.img.gz" | head -n1)
        echo "📦 找到构建产物: $FILE_PATH"
        zip -j "$ZIP_NAME" "$FILE_PATH"

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        files: openwrt-${{ matrix.build_type }}-${{ github.run_number }}.zip
        tag_name: openwrt-${{ github.run_number }}
        name: "OpenWRT Multi-Build #${{ github.run_number }}"
        body: |
          📦 自动发布版本（Main & Bypass）

          - 构建类型: `${{ matrix.build_type }}`
          - 构建编号: `${{ github.run_number }}`
          - 构建平台: `${{ runner.os }}`
          - 包含文件: `openwrt-x86-64-generic-squashfs-combined-efi.img.gz`
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
